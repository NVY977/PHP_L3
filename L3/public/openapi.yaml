openapi: 3.0.0
info:
  title: Labâ„–3. Matches
  description: Conducting a tournament between teams
  contact:
    name: Nickolay Yazykov [NVY]
    url: https://github.com/NVY977
  version: 1.0.0
paths:
  /players:
    get:
      summary: All players
      operationId: listPlayers
      tags:
        - players
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new Player
      operationId: addPlayer
      tags:
        - players
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /players/{player_id}:
    get:
      summary: Get player by ID
      operationId: getPlayerById
      tags:
        - players
      parameters:
        - name: player_id
          in: path
          required: true
          description: Team Player ID
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Put player by id
      operationId: putPlayer
      tags:
        - players
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
        - name: player
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Player'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch player by ID
      operationId: patchPlayerByID
      tags:
        - players
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
        - name: team_id
          in: query
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: lastname
          in: query
          required: false
          schema:
            type: string
        - name: age
          in: query
          required: false
          schema:
            type: integer
        - name: city
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete player by id
      operationId: deletePlayerById
      tags:
        - players
      parameters:
        - name: player_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /teams:
    get:
      summary: All teams
      operationId: listTeams
      tags:
        - teams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new Team
      operationId: addTeam
      tags:
        - teams
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /teams/{team_id}:
    get:
      summary: Get team by ID
      operationId: getTeamById
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          required: true
          description: Team ID
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Put team by id
      operationId: putTeam
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: integer
        - name: team
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch team by ID
      operationId: patchTeamByID
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: integer
        - name: tournament_id
          in: query
          required: true
          schema:
            type: integer
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: color
          in: query
          required: false
          schema:
            type: string
        - name: city
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete team by id
      operationId: deleteTeamById
      tags:
        - teams
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tournaments:
    get:
      summary: All tournaments
      operationId: listTournaments
      tags:
        - tournaments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new Tournaments
      operationId: addTournaments
      tags:
        - tournaments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tournaments/{tournament_id}:
    get:
      summary: Get tournament by ID
      operationId: getTournamentById
      tags:
        - tournaments
      parameters:
        - name: tournament_id
          in: path
          required: true
          description: Tournament ID
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Put tournament by id
      operationId: putTournament
      tags:
        - tournaments
      parameters:
        - name: tournament_id
          in: path
          required: true
          schema:
            type: integer
        - name: tournament
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Tournament'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch tournament by ID
      operationId: patchTournamentByID
      tags:
        - tournaments
      parameters:
        - name: tournament_id
          in: path
          required: true
          schema:
            type: integer
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: prize
          in: query
          required: false
          schema:
            type: integer
        - name: city
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete tournament by id
      operationId: deleteTournamentById
      tags:
        - tournaments
      parameters:
        - name: tournament_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Player:
      type: object
      required:
        - id
        - team_id
      properties:
        id:
          type: integer
          format: int64
        team_id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        age:
          type: integer
        city:
          type: string
    Players:
      type: array
      items:
        $ref: "#/components/schemas/Player"
    Tournament:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        prize:
          type: integer
        city:
          type: string
    Tournaments:
        type: array
        items:
          $ref: "#/components/schemas/Tournament"
    Team:
      type: object
      required:
        - id
        - tournament_id
      properties:
        id:
          type: integer
          format: int64
        tournament_id:
          type: integer
          format: int64
        title:
          type: string
        color:
          type: string
        city:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/Code'
        message:
          type: string
        meta:
          type: object
    Code:
      type: string
      enum:
        - '200'
        - '201'
        - '400'
        - '404'
